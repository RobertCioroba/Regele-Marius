@model Regele_Marius.Models.Calculator

@{
    ViewBag.Title = "Calculator grasime corporala";

}

<h1 class="calculator-title">Calculează-ți indicele de masă corporală</h1>
<section class="article-section">
    <article>
        <h3>Află dacă ești pacient metabolic</h3>
        <p>Riscul de a dezvolta diabet și alte afecțiuni metabolice crește nu doar odată cu indicele corporal (BMI), ci și cu circumferința taliei. Circumferința taliei indică o acumulare excesivă de țesut adipos în interiorul abdomenului, în jurul organelor vitale.</p>
        <p>Dacă ai circumferința taliei peste 88 cm (la femei) și 102 cm (la bărbați), te încadrezi în cea mai severă clasă de risc pentru a dezvolta sindromul metabolic.</p>
    </article>

    <article>
        <h3>Obezitatea este o boală metabolică</h3>
        <p>Obezitatea și supraponderea reprezintă o problemă majoră de sănătate în lumea modernă și principalul factor în creșterea morbidității generale, scăderea speranței de viață și a calității vieții.</p>
        <p>Riscurile legate de prezența supraponderii și obezității sunt multiple, afectând toate sistemele organismului. Un indice al masei corporale BMI > 30 crește exponențial riscul de complicații și patologii asociate, dintre care cele mai grave sunt diabetul zaharat și bolile cardiovasculare.</p>
    </article>
</section>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row inner-form-horizontal">
            <div class="col-md-6">
                <div class="row">
                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.Gen)
                        @Html.EnumDropDownListFor(model => model.Gen, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Gen, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.Greutate)
                        @Html.EditorFor(model => model.Greutate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Greutate, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.Inaltime)
                        @Html.EditorFor(model => model.Inaltime, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Inaltime, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.Varsta)
                        @Html.EditorFor(model => model.Varsta, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Varsta, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-12 submit-wrapper">
                        <input type="submit" value="Calculeaza" class="btn btn-danger" />
                    </div>

                </div>
            </div>
        </div>

        @{
            if (ViewBag.Message3 != null)
            {
                <div class="rezultat">
                    <div>
                        <!--
                        @{
                            var BMI = ViewBag.Title;
                            var valoare = ViewBag.Message;
                        }
                            -->
                        <h2>@ViewBag.Message3</h2>
                        <h3>Procent grasime corporala: @ViewBag.Message1 </h3>
                        <h3>Indice masa corporala(IBM): @ViewBag.Message2</h3>
                        <img src="~/Uploads/Others/IBM2.PNG" />
                    </div>
                </div>
            }
        }
    </div>
}


<style>
    .form-horizontal .inner-form-horizontal {
        display: flex;
        justify-content: center;
    }

    .form-horizontal select,
    .form-horizontal input {
        max-width: none !important;
    }

    .form-horizontal .rezultat {
        display: flex;
        flex-direction: column;
        align-items: center;
    }
</style>