@model Regele_Marius.ViewModels.ProgramareInterventieViewModel

@{
    ViewBag.Title = "Programare interventie";

    if (Session["NumeUtilizator"] == null || (bool)Session["Activ"] == true)
    {
        Response.Redirect("~/Cont/Logare", false);
    }

}

@using (Html.BeginForm("Create", "ProgramareInterventie"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ProgramareInterventie</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ProgramareInterventie.MedicId, "MedicId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ProgramareInterventie.MedicId, new SelectList(Model.Medici, "Id", "Nume"), "Selectare medic", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProgramareInterventie.MedicId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.ProgramareInterventie.InterventieId, "InterventieId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ProgramareInterventie.InterventieId, new SelectList(Model.Interventii, "Id", "Denumire"), "Selectare interventie", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProgramareInterventie.InterventieId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProgramareInterventie.DataProgramare, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProgramareInterventie.DataProgramare, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProgramareInterventie.DataProgramare, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProgramareInterventie.OraInceput, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProgramareInterventie.OraInceput, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProgramareInterventie.OraInceput, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvare" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Inapoi", "Index")
</div>
