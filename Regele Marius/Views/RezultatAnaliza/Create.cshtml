@model Regele_Marius.ViewModels.RezultatAnalizaCreateViewModel

@{
    ViewBag.Title = "Raport analize";
}

<h1>Raport analize</h1>

@using (Html.BeginForm("Create","RezultatAnaliza")) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <h3>Denumire analize: @Model.Analiza.Denumire</h3>
    <h3>Descriere: @Model.RezultatAnaliza.Descriere</h3>
    <h3>Pret: @Model.RezultatAnaliza.Pret RON</h3>
    <h3>Nume pacient: @Model.ProgramareAnaliza.Nume</h3>
    <h3>Email: @Model.ProgramareAnaliza.Email</h3>
    <h3>Telefon: @Model.ProgramareAnaliza.NrTelefon</h3>
    <h3>Gen: @Model.ProgramareAnaliza.Gen</h3>


    @if (Model.Analiza.Glicemie == true)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.RezultatAnaliza.Glicemie, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RezultatAnaliza.Glicemie, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RezultatAnaliza.Glicemie, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    @if (Model.Analiza.NumarLeucocite == true)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.RezultatAnaliza.NumarLeucocite, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RezultatAnaliza.NumarLeucocite, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RezultatAnaliza.NumarLeucocite, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    @if (Model.Analiza.NumarEritrocite == true)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.RezultatAnaliza.NumarEritrocite, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RezultatAnaliza.NumarEritrocite, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RezultatAnaliza.NumarEritrocite, "", new { @class = "text-danger" })
            </div>
        </div>
    }


    @if (Model.Analiza.Hemoglobina == true)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.RezultatAnaliza.Hemoglobina, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RezultatAnaliza.Hemoglobina, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RezultatAnaliza.Hemoglobina, "", new { @class = "text-danger" })
            </div>
        </div>
    }


    @if (Model.Analiza.Hematrocit == true)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.RezultatAnaliza.Hematrocit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RezultatAnaliza.Hematrocit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RezultatAnaliza.Hematrocit, "", new { @class = "text-danger" })
            </div>
        </div>
    }


    @if (Model.Analiza.VolumEritrocitarMediu == true)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.RezultatAnaliza.VolumEritrocitarMediu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RezultatAnaliza.VolumEritrocitarMediu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RezultatAnaliza.VolumEritrocitarMediu, "", new { @class = "text-danger" })
            </div>
        </div>
    }


    @if (Model.Analiza.ConcentratieMedie == true)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.RezultatAnaliza.ConcentratieMedie, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RezultatAnaliza.ConcentratieMedie, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RezultatAnaliza.ConcentratieMedie, "", new { @class = "text-danger" })
            </div>
        </div>
    }


    @if (Model.Analiza.Trombocite == true)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.RezultatAnaliza.Trombocite, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RezultatAnaliza.Trombocite, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RezultatAnaliza.Trombocite, "", new { @class = "text-danger" })
            </div>
        </div>
    }


    @if (Model.Analiza.VolumMediuTrombocitar == true)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.RezultatAnaliza.VolumMediuTrombocitar, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RezultatAnaliza.VolumMediuTrombocitar, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RezultatAnaliza.VolumMediuTrombocitar, "", new { @class = "text-danger" })
            </div>
        </div>
    }


    @if (Model.Analiza.Plachetocrit == true)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.RezultatAnaliza.Plachetocrit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RezultatAnaliza.Plachetocrit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RezultatAnaliza.Plachetocrit, "", new { @class = "text-danger" })
            </div>
        </div>
    }


    @if (Model.Analiza.Monocite == true)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.RezultatAnaliza.Monocite, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RezultatAnaliza.Monocite, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RezultatAnaliza.Monocite, "", new { @class = "text-danger" })
            </div>
        </div>
    }


    @if (Model.Analiza.Neutrofile == true)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.RezultatAnaliza.Neutrofile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RezultatAnaliza.Neutrofile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RezultatAnaliza.Neutrofile, "", new { @class = "text-danger" })
            </div>
        </div>
    }


    @if (Model.Analiza.Eozinofile == true)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.RezultatAnaliza.Eozinofile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RezultatAnaliza.Eozinofile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RezultatAnaliza.Eozinofile, "", new { @class = "text-danger" })
            </div>
        </div>
    }


    @if (Model.Analiza.Bazofile == true)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.RezultatAnaliza.Bazofile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RezultatAnaliza.Bazofile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RezultatAnaliza.Bazofile, "", new { @class = "text-danger" })
            </div>
        </div>
    }


    @if (Model.Analiza.Limfocite == true)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.RezultatAnaliza.Limfocite, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RezultatAnaliza.Limfocite, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RezultatAnaliza.Limfocite, "", new { @class = "text-danger" })
            </div>
        </div>
    }


    @if (Model.Analiza.Colesterol == true)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.RezultatAnaliza.Colesterol, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RezultatAnaliza.Colesterol, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RezultatAnaliza.Colesterol, "", new { @class = "text-danger" })
            </div>
        </div>
    }


    @if (Model.Analiza.Trigliceride == true)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.RezultatAnaliza.Trigliceride, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RezultatAnaliza.Trigliceride, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RezultatAnaliza.Trigliceride, "", new { @class = "text-danger" })
            </div>
        </div>
    }


    @if (Model.Analiza.Uree == true)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.RezultatAnaliza.Uree, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RezultatAnaliza.Uree, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RezultatAnaliza.Uree, "", new { @class = "text-danger" })
            </div>
        </div>
    }


    @if (Model.Analiza.Creatinina == true)
    {

    }
    <div class="form-group">
        @Html.LabelFor(model => model.RezultatAnaliza.Creatinina, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RezultatAnaliza.Creatinina, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RezultatAnaliza.Creatinina, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (Model.Analiza.Calciu == true)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.RezultatAnaliza.Calciu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RezultatAnaliza.Calciu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RezultatAnaliza.Calciu, "", new { @class = "text-danger" })
            </div>
        </div>
    }


    @if (Model.Analiza.Fier == true)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.RezultatAnaliza.Fier, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RezultatAnaliza.Fier, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RezultatAnaliza.Fier, "", new { @class = "text-danger" })
            </div>
        </div>
    }


    @if (Model.Analiza.Magneziu == true)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.RezultatAnaliza.Magneziu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RezultatAnaliza.Magneziu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RezultatAnaliza.Magneziu, "", new { @class = "text-danger" })
            </div>
        </div>
    }


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Salvare" class="btn btn-default" />
        </div>
    </div>
</div>
}

@{ 
    TempData["idProgramare"] = Model.ProgramareAnaliza.Id;
}
