@model PagedList.IPagedList<Regele_Marius.Models.ProgramareAnaliza>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<link href="~/Content/StyleSheet.css" type="text/css" rel="stylesheet" />

@{
    ViewBag.Title = "Lista programari analiza";

    if (Session["NumeUtilizator"] == null || (bool)Session["Activ"] == true)
    {
        Response.Redirect("~/Cont/Logare", false);
    }
}

<h2>Lista programari analiza</h2>

@using (Html.BeginForm("Index", "ProgramareAnaliza1", FormMethod.Get))
{
    <p>
        <div class="tooltip">
            @Html.TextBox("SearchString2", ViewBag.CurrentFilter2 as string)
            <input type="submit" value="Search" />
            <span class="tooltiptext">Cauta dupa nume</span>
        </div>
    </p>
}

<table class="table">
    <tr>
        <th>
            <div class="tooltip">
                @Html.ActionLink("Denumire analiza", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter2 = ViewBag.CurrentFilter2 })
                <span class="tooltiptext">Sorteaza dupa analiza</span>
            </div>
        </th>
        <th>
            Nume
        </th>
        <th>
            Prenume
        </th>
        <th>
            Data nastere
        </th>
        <th>
            Numar telefon
        </th>
        <th>
            Email
        </th>
        <th>
            <div class="tooltip">
                @Html.ActionLink("Status", "Index", new { sortOrder = ViewBag.DateSortParm3, currentFilter2 = ViewBag.CurrentFilter2 })
                <span class="tooltiptext">Sorteaza dupa status</span>
            </div>
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.Analiza.Denumire)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Nume)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Prenume)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.DataNastere)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.NrTelefon)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Email)
    </td>
        @{
            if (item.Status == Regele_Marius.Models.Status.Derulare)
            {
                <td style="background-color:yellow">@item.Status</td>
            }
            else
            {
                <td style="background-color:limegreen">@item.Status</td>
            }
        }
<td>
    @{
        if (item.Status == Regele_Marius.Models.Status.Finalizat)
        {
            <div class="tooltip">
                @Html.ActionLink(" ", "Details", "RezultatAnaliza", new { id = item.RezultatGuid }, new { style = "background: url('" + Url.Content("~/images/info.svg") + "')  no-repeat center; display:inline-block; height:30px; width:30px; filter: invert(40%) sepia(52%) saturate(3535%) hue-rotate(209deg) brightness(99%) contrast(110%);" })
                <span class="tooltiptext">Vizionare raport</span>
            </div>
            <div class="tooltip">
                @Html.ActionLink(" ", "Edit", "ProgramareAnaliza1", new { id = item.Id }, new { style = "background: url('" + Url.Content("~/images/edit-solid.svg") + "') no-repeat center; display:inline-block; height:30px; width:30px;filter: invert(51%) sepia(6%) saturate(4768%) hue-rotate(71deg) brightness(117%) contrast(102%);" })
                <span class="tooltiptext">Editare</span>
            </div>
            <div class="tooltip">
                @Html.ActionLink(" ", "Delete", "ProgramareAnaliza1", new { id = item.Id }, new { style = "background: url('" + Url.Content("~/images/trash.svg") + "') no-repeat center right; display:inline-block; height:30px; width:30px; filter: invert(91%) sepia(0%) saturate(6644%) hue-rotate(138deg) brightness(88%) contrast(84%);" })
                <span class="tooltiptext">Stergere</span>
            </div>
        }
        else
        {
            @Html.ActionLink("Finalizare", "Create", "RezultatAnaliza", new { id = item.Id }, new { id = item.Id })
            <div class="tooltip">
                @Html.ActionLink(" ", "Edit", "ProgramareAnaliza1", new { id = item.Id }, new { style = "background: url('" + Url.Content("~/images/edit-solid.svg") + "') no-repeat center; display:inline-block; height:30px; width:30px;filter: invert(51%) sepia(6%) saturate(4768%) hue-rotate(71deg) brightness(117%) contrast(102%);" })
                <span class="tooltiptext">Editare</span>
            </div>
            <div class="tooltip">
                @Html.ActionLink(" ", "Delete", "ProgramareAnaliza1", new { id = item.Id }, new { style = "background: url('" + Url.Content("~/images/trash.svg") + "') no-repeat center right; display:inline-block; height:30px; width:30px; filter: invert(91%) sepia(0%) saturate(6644%) hue-rotate(138deg) brightness(88%) contrast(84%);" })
                <span class="tooltiptext">Stergere</span>
            </div>
        }
    }

</td>
    </tr>
    }

</table>

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter2 = ViewBag.CurrentFilter2 }))