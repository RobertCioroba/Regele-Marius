@model IEnumerable<Regele_Marius.Models.Analiza>
<link href="~/Content/StyleSheet.css" type="text/css" rel="stylesheet" />

@{
    ViewBag.Title = "Lista analize";

    if (Session["NumeUtilizator"] == null || (bool)Session["Activ"] == true)
    {
        Response.Redirect("~/Cont/Logare", false);
    }
}

<h2>Lista analize</h2>

<div class="tooltip">
    @Html.ActionLink(" ", "Create", "Analiza", new { style = "background: url('" + Url.Content("~/images/plus-solid.svg") + "') no-repeat center right; display:inline-block; height:30px; width:30px; filter: invert(11%) sepia(91%) saturate(5572%) hue-rotate(358deg) brightness(88%) contrast(112%);" })
    <span class="tooltiptext">Adauga analiza</span>
</div>

@foreach (var item in Model)
{
    <div>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Denumire)
            </dt>
            <dd>
                @Html.DisplayFor(model => item.Denumire)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Descriere)
            </dt>
            <dd>
                @Html.DisplayFor(model => item.Descriere)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Durata)
            </dt>
                @{ 
                    if(item.Durata == Regele_Marius.Models.Durata.JumatateDeOra)
                    {
                        <dd>
                            0:30h
                        </dd>
                    }
                    else if(item.Durata == Regele_Marius.Models.Durata.Ora)
                    {
                        <dd>
                            1:00h
                        </dd>
                    }
                    else if(item.Durata == Regele_Marius.Models.Durata.Ora30)
                    {
                        <dd>
                            1:30h
                        </dd>
                    }
                    else if(item.Durata == Regele_Marius.Models.Durata.DouaOre)
                    {
                        <dd>
                            2:00h
                        </dd>
                    }
                }
            <dt>
                @Html.DisplayNameFor(model => model.Pret)
            </dt>
            <dd>
                @Html.DisplayFor(model => item.Pret)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Specializare.Nume)
            </dt>
            <dd>
                @Html.DisplayFor(model => item.Specializare.Nume)
            </dd>
            <dt> 

            </dt>
            <dd>

            </dd>
            <dt>
                Parametrii
            </dt>
            @{
                if (item.Glicemie == true)
                {
                    <dd>
                        @Html.DisplayNameFor(model => model.Glicemie)
                    </dd>
                }
            }
            @{
                if (item.NumarLeucocite == true)
                {
                    <dd>
                        @Html.DisplayNameFor(model => model.NumarLeucocite)
                    </dd>
                }
            }
            @{
                if (item.NumarEritrocite == true)
                {
                    <dd>
                        @Html.DisplayNameFor(model => model.NumarEritrocite)
                    </dd>
                }
            }
            @{
                if (item.Hemoglobina == true)
                {
                    <dd>
                        @Html.DisplayNameFor(model => model.Hemoglobina)
                    </dd>
                }
            }
            @{
                if (item.Hematrocit == true)
                {
                    <dd>
                        @Html.DisplayNameFor(model => model.Hematrocit)
                    </dd>
                }
            }
            @{
                if (item.VolumEritrocitarMediu == true)
                {
                    <dd>
                        @Html.DisplayNameFor(model => model.VolumEritrocitarMediu)
                    </dd>
                }
            }
            @{
                if (item.ConcentratieMedie == true)
                {
                    <dd>
                        @Html.DisplayNameFor(model => model.ConcentratieMedie)
                    </dd>
                }
            }
            @{
                if (item.Trombocite == true)
                {
                    <dd>
                        @Html.DisplayNameFor(model => model.Trombocite)
                    </dd>
                }
            }
            @{
                if (item.VolumMediuTrombocitar == true)
                {
                    <dd>
                        @Html.DisplayNameFor(model => model.VolumMediuTrombocitar)
                    </dd>
                }
            }
            @{
                if (item.Plachetocrit == true)
                {
                    <dd>
                        @Html.DisplayNameFor(model => model.Plachetocrit)
                    </dd>
                }
            }
            @{
                if (item.Monocite == true)
                {
                    <dd>
                        @Html.DisplayNameFor(model => model.Monocite)
                    </dd>
                }
            }
            @{
                if (item.Neutrofile == true)
                {
                    <dd>
                        @Html.DisplayNameFor(model => model.Neutrofile)
                    </dd>
                }
            }
            @{
                if (item.Eozinofile == true)
                {
                    <dd>
                        @Html.DisplayNameFor(model => model.Eozinofile)
                    </dd>
                }
            }
            @{
                if (item.Bazofile == true)
                {
                    <dd>
                        @Html.DisplayNameFor(model => model.Bazofile)
                    </dd>
                }
            }
            @{
                if (item.Limfocite == true)
                {
                    <dd>
                        @Html.DisplayNameFor(model => model.Limfocite)
                    </dd>
                }
            }
            @{
                if (item.Colesterol == true)
                {
                    <dd>
                        @Html.DisplayNameFor(model => model.Colesterol)
                    </dd>
                }
            }
            @{
                if (item.Trigliceride == true)
                {
                    <dd>
                        @Html.DisplayNameFor(model => model.Trigliceride)
                    </dd>
                }
            }
            @{
                if (item.Uree == true)
                {
                    <dd>
                        @Html.DisplayNameFor(model => model.Uree)
                    </dd>
                }
            }
            @{
                if (item.Creatinina == true)
                {
                    <dd>
                        @Html.DisplayNameFor(model => model.Creatinina)
                    </dd>
                }
            }
            @{
                if (item.Calciu == true)
                {
                    <dd>
                        @Html.DisplayNameFor(model => model.Calciu)
                    </dd>
                }
            }
            @{
                if (item.Fier == true)
                {
                    <dd>
                        @Html.DisplayNameFor(model => model.Fier)
                    </dd>
                }
            }
            @{
                if (item.Magneziu == true)
                {
                    <dd>
                        @Html.DisplayNameFor(model => model.Magneziu)
                    </dd>
                }
            }
        </dl>
    </div>
    <td>
        <div class="tooltip">
            @Html.ActionLink(" ", "Delete", "Analiza", new { id = item.Id }, new { style = "background: url('" + Url.Content("~/images/trash.svg") + "') no-repeat center right; display:inline-block; height:30px; width:30px; filter: invert(91%) sepia(0%) saturate(6644%) hue-rotate(138deg) brightness(88%) contrast(84%);" })
            <span class="tooltiptext">Stergere</span>
        </div>
        <div class="tooltip">
            @Html.ActionLink(" ", "Edit", "Analiza", new { id = item.Id }, new { style = "background: url('" + Url.Content("~/images/edit-solid.svg") + "')  no-repeat center; display:inline-block; height:30px; width:30px; filter: invert(11%) sepia(91%) saturate(5572%) hue-rotate(358deg) brightness(88%) contrast(112%);" })
            <span class="tooltiptext">Editare</span>
        </div>
    </td>
}
